# version: '3.8'
services:
  broker1:
    image: 'bitnami/kafka:latest'
    container_name: broker1
    networks:
      - kafka-network
    ports:
      - "9091:9092"
    environment:
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_PROCESS_ROLES: 'broker,controller'
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://broker1:9092
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '1@broker1:9093,2@broker2:9093,3@broker3:9093'
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_KRAFT_CLUSTER_ID: 9Fe32R9TTRCr2cVolz95pw
    volumes:
      - ${PWD}/broker1:/bitnami/kafka

  broker2:
    image: 'bitnami/kafka:latest'
    container_name: broker2
    networks:
      - kafka-network
    ports:
      - "9092:9092"
    environment:
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_PROCESS_ROLES: 'broker,controller'
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://broker2:9092
      KAFKA_CFG_BROKER_ID: 2
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '1@broker1:9093,2@broker2:9093,3@broker3:9093'
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_KRAFT_CLUSTER_ID: 9Fe32R9TTRCr2cVolz95pw
    volumes:
      - ${PWD}/broker2:/bitnami/kafka

  broker3:
    image: 'bitnami/kafka:latest'
    container_name: broker3
    networks:
      - kafka-network
    ports:
      - "9094:9092"
    environment:
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_PROCESS_ROLES: 'broker,controller'
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://broker3:9092
      KAFKA_CFG_BROKER_ID: 3
      KAFKA_CFG_NODE_ID: 3
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '1@broker1:9093,2@broker2:9093,3@broker3:9093'
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_KRAFT_CLUSTER_ID: 9Fe32R9TTRCr2cVolz95pw
    volumes:
      - ${PWD}/broker3:/bitnami/kafka

  kafka-ui:
    container_name: kafka-ui
    image: 'provectuslabs/kafka-ui:latest'
    networks:
      - kafka-network
    depends_on:
      - broker1
      - broker2
      - broker3
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: 'broker1:9091,broker2:9092,broker3:9094'
      KAFKA_CLUSTERS_0_NAME: kafka-cluster

  debezium-connect:
    image: debezium/connect:2.7
    container_name: connect
    networks:
      - kafka-network
    ports:
      - 8083:8083
    environment:
      CONFIG_STORAGE_TOPIC: source_connect_configs
      OFFSET_STORAGE_TOPIC: source_connect_offsets
      STATUS_STORAGE_TOPIC: source_connect_statuses
      BOOTSTRAP_SERVERS: broker1:9091,broker2:9092,broker3:9094
      GROUP_ID: 1
    links:
      - oracle
      - postgres
      - mssql
      - broker1
      - broker2
      - broker3
    depends_on:
      - oracle
      - postgres
      - mssql
      - broker1
      - broker2
      - broker3
  # Source DB's
  oracle:
    image: container-registry.oracle.com/database/enterprise:19.3.0.0
    container_name: oracle
    networks:
      - kafka-network
    environment:
      - ORACLE_PDB=ORCLPDB1
      - ORACLE_PWD=top_secret
      - ORACLE_EDITION=standard
    ports:
      - 1521:1521
    volumes:
      # - ${PWD}/oradata:/opt/oracle/oradata
      - /mnt/d/DockerVolumes/oracle-19c/oradata/:/opt/oracle/oradata:rw
      - /mnt/d/DockerVolumes/oracle-19c/oradata/recovery_area:/opt/oracle/oradata/recovery_area:rw
      - ${PWD}/ora-setup-scripts:/opt/oracle/scripts/setup
      # - ${PWD}/ora-startup-scripts:/opt/oracle/scripts/startup

  # Sinks DB's
  postgres:
    # *-----------------------------*
    # To connect to the DB:
    #   docker exec -it postgres bash -c 'psql -U $POSTGRES_USER $POSTGRES_DB'
    # *-----------------------------*
    image: postgres:latest
    container_name: postgres
    networks:
      - kafka-network
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    links:
      - broker1
      - broker2
      - broker3
    depends_on:
      - broker1
      - broker2
      - broker3

  mssql:
    # *----------------------------
    # To connect to the DB:
    #   docker exec -it mssql bash -c '/opt/mssql-tools/bin/sqlcmd -l 30 -S localhost -U sa -P $SA_PASSWORD'
    # *-----------------------------*
    image: mcr.microsoft.com/mssql/server:latest
    container_name: mssql
    networks:
      - kafka-network
    ports:
      - "1433:1433"
    environment:
      - SA_PASSWORD=Admin123  # Password for the MSSQL database
      - ACCEPT_EULA=Y         # Accept End-User License Agreement for MSSQL
      - MSSQL_PID=Standard     # MSSQL Server edition (e.g., Standard, Enterprise)
      - MSSQL_AGENT_ENABLED=true # Enable SQL Server Agent
    links:
      - broker1
      - broker2
      - broker3
    depends_on:
      - broker1
      - broker2
      - broker3

networks:
  kafka-network:
    name: kafka-network
    driver: bridge
    # Other Systems
